const path = require("path");
const { createFilePath } = require('gatsby-source-filesystem');

exports.onCreateNode = ({ node, getNode, actions }) => {
  const { createNodeField } = actions;

  if (node.internal.type === 'MarkdownRemark') {
    const slug = createFilePath({ node, getNode, basePath: 'content' });
    const { frontmatter } = node;

    // Assuming your 'frontmatter' has a 'path' and 'lang' field
    createNodeField({
      node,
      name: 'path',
      value: frontmatter.path || '/default-path',
    });

    createNodeField({
      node,
      name: 'lang',
      value: frontmatter.lang || 'en',
    });
  }
};

exports.createPages = async ({ graphql, actions }) => {
  const { createPage } = actions;
  const result = await graphql(`
    {
      allNodeArticle(sort: { created: DESC }, limit: 1000) {
        edges {
          node {
            id
            path {
              langcode
            }
          }
        }
      }
    }
  `);

  if (result.errors) {
    throw result.errors;
  }

  const nodes = result.data.allNodeArticle.edges;
  const languages = new Set(); // Store unique language codes

  // Collect unique language codes
  nodes.forEach(({ node }) => {
    const { langcode } = node.path;
    languages.add(langcode);
  });

  // Create pages for each language
  languages.forEach(language => {
    const filteredNodes = nodes.filter(({ node }) => node.path.langcode === language);
    const postsPerPage = 6;
    const numPages = Math.ceil(filteredNodes.length / postsPerPage);

    Array.from({ length: numPages }).forEach((_, i) => {
      createPage({
        path: i === 0 ? `/${language}/drupal` : `/${language}/drupal/${i}`,
        component: path.resolve('./src/templates/Drupal.tsx'),
        context: {
          limit: postsPerPage,
          skip: i * postsPerPage,
          numPages,
          currentPage: i + 1,
          language,
        },
      });
    });
  });
};

exports.onCreatePage = ({  graphql, page, actions }) => {
  const { createPage, deletePage } = actions;
  
  const availableLanguages = ['en', 'fr','it'];
  availableLanguages.forEach((lang) => {
    createPage({
      path: `/${lang}/news`,
      component: require.resolve('./src/templates/News.tsx'),
      context: {
        lang,
      },
    });
  });

  // Check if the page is created by the Gatsby i18n plugin
  if (page.path.includes('/home/home')) {
    delete page.context.path;
    // Get the original path generated by the plugin
    const originalPath = page.path;

    // Remove the duplicated "home" segment from the path
    const newPath = originalPath.replace(/\/home\/home/, '/home');

    // Delete the original page
    deletePage(page);

    // Create a new page with the modified path
    createPage({
      ...page,
      path: newPath,
    });
  }
};
